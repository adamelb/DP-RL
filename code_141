import xgboost as xgb
from sklearn.multioutput import MultiOutputRegressor

# Assume you already have:
#   X: numpy array of shape (n, 10) -- your features
#   Y: numpy array of shape (n, 6)  -- your 6-dimensional targets

# 1) Wrap XGBRegressor to handle multi‚Äêoutput regression
model = MultiOutputRegressor(
    xgb.XGBRegressor(
        objective="reg:squarederror",
        n_estimators=100,
        learning_rate=0.1,
        n_jobs=-1,
        random_state=42
    )
)

# 2) Train on your full dataset
model.fit(X, Y)

# 3) When you need predictions, simply call:
#    preds will be an array of shape (m, 6) for m samples in X_new
# preds = model.predict(X_new)